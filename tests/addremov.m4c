/*
 * Tests of both enqueuing and dequeueing
*/

#include "common.h"

include(template/common.m4)

void test_mixed() {
    char *a = (char *) malloc(16);
    char *b = (char *) malloc(16);
    char *c = (char *) malloc(16);
    char *d = (char *) malloc(16);
    char *e = (char *) malloc(16);
    char *f = (char *) malloc(16);
    char *g = (char *) malloc(16);
    char *output = CWUTILS_NULL;
    struct StringQueue *my_queue = M4QUEUE_INIT(my_queue, STRING_QUEUE);

    strcpy(a, "foo");
    strcpy(b, "bar");
    strcpy(c, "baz");
    strcpy(d, "tuna");
    strcpy(e, "spam");
    strcpy(f, "thud");
    strcpy(g, "eggs");

    M4QUEUE_ENQUEUE(my_queue, a, STRING_QUEUE);
    M4QUEUE_ENQUEUE(my_queue, b, STRING_QUEUE);
    M4QUEUE_ENQUEUE(my_queue, c, STRING_QUEUE);

    ASSERT_NUMEQ(my_queue->length, 3);
    ASSERT_NUMEQ(my_queue->head, 0);
    ASSERT_NUMEQ(my_queue->capacity, M4QUEUE_INITIAL_LENGTH);
    ASSERT_STREQ(my_queue->contents[0], "foo");
    ASSERT_STREQ(my_queue->contents[1], "bar");
    ASSERT_STREQ(my_queue->contents[2], "baz");

    M4QUEUE_DEQUEUE(my_queue, output, STRING_QUEUE);

    ASSERT_NUMEQ(my_queue->length, 2);
    ASSERT_NUMEQ(my_queue->head, 1);
    ASSERT_NUMEQ(my_queue->capacity, M4QUEUE_INITIAL_LENGTH);
    ASSERT_STREQ(my_queue->contents[0], "foo");
    ASSERT_STREQ(my_queue->contents[1], "bar");

    M4QUEUE_ENQUEUE(my_queue, d, STRING_QUEUE);

    ASSERT_NUMEQ(my_queue->length, 3);
    ASSERT_NUMEQ(my_queue->head, 0);
    ASSERT_NUMEQ(my_queue->capacity, M4QUEUE_INITIAL_LENGTH);
    ASSERT_STREQ(my_queue->contents[0], "bar");
    ASSERT_STREQ(my_queue->contents[1], "baz");
    ASSERT_STREQ(my_queue->contents[2], "tuna");

    M4QUEUE_DEQUEUE(my_queue, output, STRING_QUEUE);
    M4QUEUE_DEQUEUE(my_queue, output, STRING_QUEUE);
    M4QUEUE_ENQUEUE(my_queue, a, STRING_QUEUE);
    M4QUEUE_ENQUEUE(my_queue, b, STRING_QUEUE);

    ASSERT_NUMEQ(my_queue->length, 3);
    ASSERT_NUMEQ(my_queue->head, 0);
    ASSERT_NUMEQ(my_queue->capacity, M4QUEUE_INITIAL_LENGTH);
    ASSERT_STREQ(my_queue->contents[0], "tuna");
    ASSERT_STREQ(my_queue->contents[1], "foo");
    ASSERT_STREQ(my_queue->contents[2], "bar");

    M4QUEUE_FREE(my_queue, STRING_QUEUE);
}

int main() {
    test_mixed();

    return 0;
}

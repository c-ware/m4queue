/*
 * Test the length operation
*/

#include "common.h"

include(template/common.m4)

void test_length() {
    char *a = (char *) malloc(16);
    char *b = (char *) malloc(16);
    char *c = (char *) malloc(16);
    char *d = (char *) malloc(16);
    char *e = (char *) malloc(16);
    char *f = (char *) malloc(16);
    char *g = (char *) malloc(16);
    char *output = CWUTILS_NULL;
    struct StringQueue *my_queue = M4QUEUE_INIT(my_queue, STRING_QUEUE);

    strcpy(a, "foo");
    strcpy(b, "bar");
    strcpy(c, "baz");
    strcpy(d, "tuna");
    strcpy(e, "spam");
    strcpy(f, "thud");
    strcpy(g, "eggs");

    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 0);

    M4QUEUE_ENQUEUE(my_queue, a, STRING_QUEUE);
    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 1);

    M4QUEUE_ENQUEUE(my_queue, b, STRING_QUEUE);
    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 2);

    M4QUEUE_ENQUEUE(my_queue, c, STRING_QUEUE);
    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 3);

    M4QUEUE_DEQUEUE(my_queue, output, STRING_QUEUE);
    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 2);

    M4QUEUE_DEQUEUE(my_queue, output, STRING_QUEUE);
    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 1);

    M4QUEUE_DEQUEUE(my_queue, output, STRING_QUEUE);
    ASSERT_NUMEQ(M4QUEUE_LENGTH(my_queue), 0);

    M4QUEUE_FREE(my_queue, STRING_QUEUE);
}

int main() {
    test_length();

    return 0;
}
